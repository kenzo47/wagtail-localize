[tox]
skipsdist = True
usedevelop = True

envlist =
    python{3.8,3.9,3.10}-django{3.2,4.1}-wagtail{4.1}-{sqlite,postgres12}
    python{3.8,3.9,3.10,3.11}-django{4.2}-wagtail{5.1,5.2}-{sqlite,postgres15}
    python{3.12}-django{4.2}-wagtail{5.2}-{sqlite,postgres15}
    python{3.10,3.11,3.12}-django{5.0}-wagtail{5.2.2}-{sqlite,postgres15}

[gh-actions]
python =
    3.8: python3.8
    3.9: python3.9
    3.10: python3.10
    3.11: python3.11
    3.12: python3.12

[gh-actions:env]
DATABASE =
    postgres: postgres
    sqlite: sqlite

[testenv]
pass_env =
    FORCE_COLOR
    NO_COLOR

install_command = pip install -e ".[testing]" -U {opts} {packages}
commands = coverage run testmanage.py test --deprecation all {posargs: -v 2}

deps =
    coverage
    typing_extensions>=4.0

    django3.2: Django>=3.2,<3.3
    django4.1: Django>=4.1,<4.2
    django4.2: Django>=4.2,<5.0
    django5.0: Django>=5.0,<5.1

    wagtail4.1: wagtail>=4.1,<4.2
    wagtail5.1: wagtail>=5.1,<5.2
    wagtail5.2: wagtail>=5.2,<5.3
    wagtailmain: git+https://github.com/wagtail/wagtail.git

    # Pinned to work around UTC connection error
    # https://stackoverflow.com/questions/68024060/assertionerror-database-connection-isnt-set-to-utc
    postgres: psycopg2

setenv =
    postgres: DATABASE_URL={env:DATABASE_URL:postgres:///wagtail_localize}


[testenv:interactive]
basepython = python3.11

commands_pre =
    python {toxinidir}/testmanage.py makemigrations
    python {toxinidir}/testmanage.py migrate
    python {toxinidir}/testmanage.py shell -c "from django.contrib.auth.models import User;(not User.objects.filter(username='admin').exists()) and User.objects.create_superuser('admin', 'super@example.com', 'changeme')"
    python {toxinidir}/testmanage.py createcachetable

commands =
    {posargs:python testmanage.py runserver 0.0.0.0:8020}

setenv =
    INTERACTIVE = 1

[testenv:migrations]
basepython = python3.9

# always generate with the min supported versions
deps =
    Django~=3.2
    wagtail>=4.1,<4.2

commands =
    python {toxinidir}/testmanage.py makemigrations
